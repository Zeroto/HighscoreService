// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Migrations.Migrations
{
    [DbContext(typeof(HighscoresContext))]
    partial class HighscoresContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Models.Client", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("secret")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Models.Score", b =>
                {
                    b.Property<Guid>("clientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("userId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("userclientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("userid")
                        .HasColumnType("uuid");

                    b.Property<int>("value")
                        .HasColumnType("integer");

                    b.HasKey("clientId", "id");

                    b.HasIndex("userclientId", "userid");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("Models.User", b =>
                {
                    b.Property<Guid>("clientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("clientId", "id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Models.Score", b =>
                {
                    b.HasOne("Models.Client", "client")
                        .WithMany()
                        .HasForeignKey("clientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.User", "user")
                        .WithMany("scores")
                        .HasForeignKey("userclientId", "userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.User", b =>
                {
                    b.HasOne("Models.Client", "client")
                        .WithMany()
                        .HasForeignKey("clientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
