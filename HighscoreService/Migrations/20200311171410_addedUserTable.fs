// <auto-generated />
namespace HighscoreService.Migrations

open Models
open System
open System.Collections.Generic
open Microsoft.EntityFrameworkCore
open Microsoft.EntityFrameworkCore.Infrastructure
open Microsoft.EntityFrameworkCore.Metadata
open Microsoft.EntityFrameworkCore.Migrations
open Microsoft.EntityFrameworkCore.Migrations.Operations
open Microsoft.EntityFrameworkCore.Migrations.Operations.Builders
open Microsoft.EntityFrameworkCore.Storage.ValueConversion
open Npgsql.EntityFrameworkCore.PostgreSQL.Metadata


type private UserTable = {
    id: OperationBuilder<AddColumnOperation>
    name: OperationBuilder<AddColumnOperation>
}

[<DbContext(typeof<HighscoresContext>)>]
[<Migration("20200311171410_addedUserTable")>]
type addedUserTable() =
    inherit Migration()

    override this.Up(migrationBuilder:MigrationBuilder) =
        migrationBuilder.DropPrimaryKey(
            name = "PK_Scores"
            , table = "Scores") |> ignore

        migrationBuilder.DropColumn(
            name = "name"
            , table = "Scores") |> ignore

        migrationBuilder.RenameTable(
            name = "Scores"
            , newName = "Score", newSchema = null) |> ignore

        migrationBuilder.AddColumn<int>(
            name = "userId"
            , table = "Score", fixedLength = Nullable(false), nullable = false, defaultValue = Nullable(0)) |> ignore

        migrationBuilder.AddPrimaryKey(
            name = "PK_Score"
            , table = "Score", column = "id") |> ignore

        migrationBuilder.CreateTable(
            name = "User"
            ,columns = (fun table -> 
            {
                id = table.Column<int>(nullable = false)
                    .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                name = table.Column<string>(nullable = true)
            })
            ,constraints =
                (fun table -> 
                    table.PrimaryKey("PK_User", (fun x -> (x.id :> obj))) |> ignore
                ) 
            ) |> ignore

        migrationBuilder.CreateIndex(
            name = "IX_Score_userId"
            , table = "Score", column = "userId") |> ignore

        migrationBuilder.AddForeignKey(
            name = "FK_Score_User_userId"
            , table = "Score", column = "userId", principalTable = "User", principalColumn = "id", onDelete = ReferentialAction.Cascade) |> ignore


    override this.Down(migrationBuilder:MigrationBuilder) =
        migrationBuilder.DropForeignKey(
            name = "FK_Score_User_userId"
            , table = "Score") |> ignore

        migrationBuilder.DropTable(
            name = "User"
            ) |> ignore

        migrationBuilder.DropPrimaryKey(
            name = "PK_Score"
            , table = "Score") |> ignore

        migrationBuilder.DropIndex(
            name = "IX_Score_userId"
            , table = "Score") |> ignore

        migrationBuilder.DropColumn(
            name = "userId"
            , table = "Score") |> ignore

        migrationBuilder.RenameTable(
            name = "Score"
            , newName = "Scores", newSchema = null) |> ignore

        migrationBuilder.AddColumn<string>(
            name = "name"
            , table = "Scores", fixedLength = Nullable(false), nullable = true) |> ignore

        migrationBuilder.AddPrimaryKey(
            name = "PK_Scores"
            , table = "Scores", column = "id") |> ignore


    override this.BuildTargetModel(modelBuilder: ModelBuilder) =
        modelBuilder
            .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
            .HasAnnotation("ProductVersion", "2.2.6-servicing-10079") |> ignore

        modelBuilder.Entity("Models.Score", (fun b ->

            b.Property<int>("id")
                .ValueGeneratedOnAdd() |> ignore

            b.Property<int>("userId")
                .IsRequired() |> ignore

            b.Property<int>("value")
                .IsRequired() |> ignore


            b.HasKey("id") |> ignore


            b.HasIndex("userId") |> ignore


            b.ToTable("Score") |> ignore
        )) |> ignore

        modelBuilder.Entity("Models.User", (fun b ->

            b.Property<int>("id")
                .ValueGeneratedOnAdd() |> ignore

            b.Property<string>("name") |> ignore


            b.HasKey("id") |> ignore


            b.ToTable("User") |> ignore
        )) |> ignore

        modelBuilder.Entity("Models.Score", (fun b ->

            b.HasOne("Models.User", "user")
                .WithMany("scores")
                .HasForeignKey("userId")
                .OnDelete(DeleteBehavior.Cascade)|> ignore
        )) |> ignore

